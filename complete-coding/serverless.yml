service: complete-coding

frameworkVersion: "2"

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  profile: complete-coding
  region: ca-central-1
  environment:
    tableName: ${self:custom.tableName}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource: '*'



functions:
  getUser:
    handler: lambdas/endpoints/getUser.user
    events:
      - http: 
          path: get-user/{ID}
          method: GET
          cors: true
  getUserJob:
    handler: lambdas/endpoints/getUserJob.user
    events:
      - http: 
          path: get-job/{ID}
          method: GET
          cors: true

resources:
  Resources:
    S3CompleteCoding:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: my-space-s3
    MyCompleteTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
              - AttributeName: ID
                AttributeType: S
        KeySchema:
          - AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
              ReadCapacityUnits: 3
              WriteCapacityUnits: 3
        

plugins:
  - serverless-s3-sync
  - serverless-webpack

package:
  individually: true

custom:
  s3Sync:
   - bucketName: my-space-s3
     localDir: upload
  webpack:
    webpackConfig: 'webpack.config.js' # Name of webpack configuration file
    includeModules: false # Node modules configuration for packaging
    packager: 'npm' # Packager that will be used to package your external modules
  tableName: usersTable

